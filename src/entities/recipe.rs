//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::FromJsonQueryResult;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, Serialize, Deserialize, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "recipe")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub title: String,
    pub category: Option<String>,
    pub area: Option<String>,
    #[sea_orm(column_type = "Json")]
    pub ingredients: Vec<IngredientItem>,
    #[sea_orm(column_type = "Text")]
    pub instructions: String,
    pub thumbnail_url: Option<String>,
    pub youtube_url: Option<String>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Clone, Debug, PartialEq, Eq, Serialize, Deserialize, FromJsonQueryResult)]
pub struct IngredientItem {
    pub name: String,
    pub measure: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
